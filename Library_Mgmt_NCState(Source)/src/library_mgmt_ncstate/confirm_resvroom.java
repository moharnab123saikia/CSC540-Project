package library_mgmt_ncstate;
//import static LoginFrame.conn;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.text.DateFormatter;
//import static library_mgmt_ncstate.LoginFrame.rs;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Neha Kale
 */
public class confirm_resvroom extends javax.swing.JFrame {
 static final String jdbcURL 
	= "jdbc:oracle:thin:@ora.csc.ncsu.edu:1521:orcl";
    static Connection conn = null;
    static Statement stmt = null;
    static ResultSet rs = null;
   static String patron_id;

    /**
     * Creates new form confirm_resvroom
     */
    public confirm_resvroom(String id) {
        patron_id = id;
        initComponents();
       try {
            // Load the driver. This creates an instance of the driver
	    // and calls the registerDriver method to make Oracle Thin
	    // driver available to clients.
            Class.forName("oracle.jdbc.driver.OracleDriver");
            
	    String user = "msaikia";	// For example, "jsmith"
	    String passwd = "200109120";	// Your 9 digit student ID number

		// Get a connection from the first driver in the
		// DriverManager list that recognizes the URL jdbcURL

		conn = DriverManager.getConnection(jdbcURL, user, passwd);

		// Create a statement object that will be sending your
		// SQL statements to the DBMS

		stmt = conn.createStatement();
 		}
     catch(Throwable oops) {
            oops.printStackTrace();
        }
       
               finally {
                close(rs);
                //close(stmt);
                //close(conn);
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton_checkout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList_resvroom = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton_checkout.setText("CHECKOUT ROOM");
        jButton_checkout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_checkoutMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jList_resvroom);

        jButton1.setText("SHOW");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(jButton_checkout, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(462, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_checkout, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jButton2)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
     try {
         // TODO add your handling code here:
         DefaultListModel roomlist = new DefaultListModel();
         int i=0;
         rs = stmt.executeQuery("SELECT * FROM resv_room WHERE patron_id='"+patron_id+"' and is_active=1");
         while(rs.next())
         {
              String room_no = rs.getString("room_no");
              String starttime = rs.getString("start_time");
              String endtime = rs.getString("end_time");
              Date dater = rs.getDate("start_time");
              int flag = rs.getInt("is_active");
              if(flag==1)
                  roomlist.addElement(room_no+" "+starttime.substring(11, 19)+" "+endtime.substring(11, 19)+" "+dater);
         }
        
         jList_resvroom.setModel(roomlist);
     } catch (SQLException ex) {
         Logger.getLogger(confirm_resvroom.class.getName()).log(Level.SEVERE, null, ex);
     }

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton_checkoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_checkoutMouseClicked
     try {
         String select1=jList_resvroom.getSelectedValue().toString();
         System.out.println(select1);
         String room = select1.substring(0,2);
         String stime = select1.substring(3,11);
         String  etime = select1.substring(12,20);
         String dater = select1.substring(21,31);
         
 /*SimpleDateFormat formatter = new SimpleDateFormat("YYYY-MM-DD HH:mm:ss");
         try {
             java.util.Date dt = formatter.parse(dater+" "+stime);
             System .out.println("formated date:"+dt);
         } catch (ParseException ex) {
             Logger.getLogger(confirm_resvroom.class.getName()).log(Level.SEVERE, null, ex);
         }
         */
         System.out.println("chkout: "+room+" "+stime+" "+etime+" "+dater);
         System.out.println("insert into reservation values(reservation_seq.nextval,'"+patron_id+"','Room','"+room+"',to_date('"+dater+" "+stime+"','YYYY-MM-DD HH24:MI:SS'), to_date('"+dater+" "+etime+"','YYYY-MM-DD HH24:MI:SS'),' ',1)");
int up = stmt.executeUpdate("insert into reservation (res_id,patron_id,resc_type,resc_id,checkout_date,checkin_date,isactive) values(reservation_seq.nextval,'"+patron_id+"','Room','"+room+"',to_date('"+dater+" "+stime+"','YYYY-MM-DD HH24:MI:SS'), to_date('"+dater+" "+etime+"','YYYY-MM-DD HH24:MI:SS'),1)");
int up1= stmt.executeUpdate("update resv_room set is_active=2 where patron_id='"+patron_id+"' and room_no='"+room+"' and start_time=to_date('"+dater+" "+stime+"','YYYY-MM-DD HH24:MI:SS') and end_time= to_date('"+dater+" "+etime+"','YYYY-MM-DD HH24:MI:SS')");
     if(up!=0 && up1!=0) 
                    JOptionPane.showMessageDialog(null, "room checked out");

         // TODO add your handling code here:
     } catch (SQLException ex) {
         Logger.getLogger(confirm_resvroom.class.getName()).log(Level.SEVERE, null, ex);
     }
    }//GEN-LAST:event_jButton_checkoutMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2MouseClicked

         static void close(Connection conn) {
        if(conn != null) {
            try { conn.close(); }
            catch(Throwable oops) 
            {
                oops.printStackTrace();
            }
        }
    }

    static void close(Statement st) {
        if(st != null) {
            try { st.close(); } catch(Throwable oops) {oops.printStackTrace();}
        }
    }

    static void close(ResultSet rs) {
        if(rs != null) {
            try { rs.close(); } catch(Throwable oops) {oops.printStackTrace();}
        }
    }
    
  /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(confirm_resvroom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(confirm_resvroom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(confirm_resvroom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(confirm_resvroom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new confirm_resvroom(patron_id).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_checkout;
    private javax.swing.JList jList_resvroom;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
