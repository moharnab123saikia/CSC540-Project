package library_mgmt_ncstate;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Neha Kale
 */
import java.sql.*;
import java.lang.*;
import javax.swing.DefaultListModel;

public class LoginFrame extends javax.swing.JFrame {
 static final String jdbcURL 
	= "jdbc:oracle:thin:@ora.csc.ncsu.edu:1521:orcl";
    static Connection conn = null;
    static Statement stmt = null;
    static Statement stmt1 = null;
    static Statement stmt3 = null;
    static ResultSet rs = null;
    static ResultSet rs1 = null;
    static String patron_id ;
    CallableStatement callableStatement = null;
    /**
     * Creates new form LoginFrame
     */
    public LoginFrame() {
        initComponents();
       try {
            // Load the driver. This creates an instance of the driver
	    // and calls the registerDriver method to make Oracle Thin
	    // driver available to clients.
            Class.forName("oracle.jdbc.driver.OracleDriver");
            
	    String user = "msaikia";	// For example, "jsmith"
	    String passwd = "200109120";	// Your 9 digit student ID number

		// Get a connection from the first driver in the
		// DriverManager list that recognizes the URL jdbcURL

		conn = DriverManager.getConnection(jdbcURL, user, passwd);

		// Create a statement object that will be sending your
		// SQL statements to the DBMS

		stmt = conn.createStatement();
                stmt1 = conn.createStatement();
                stmt3 = conn.createStatement();
 		}
     catch(Throwable oops) {
            oops.printStackTrace();
        }
       
               finally {
                close(rs);
                //close(stmt);
                //close(conn);
            }
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("WELCOME TO LIBRARY");

        jLabel2.setText("    USER ID");

        jLabel3.setText("PASSWORD");

        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        jButton1.setText("LOGIN");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jCheckBox1.setText("After 10 am");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPasswordField1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                .addGap(201, 201, 201))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jCheckBox1)))
                .addContainerGap(341, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        String id;
        LoginFrame lf = new LoginFrame();
        int flag=0;
        int ok = 1;
                DefaultListModel modeldetail = new DefaultListModel();
        
        try
        {
            int j = stmt3.executeUpdate("update booklist " +
                                      "set isblocked=0 " +
                                          "where book_id in( select bo.book_id "
                    + "from  booklist bo, blockbook bl where bo.isblocked=1 "
                    + "and bo.blocking_id=bl.blocking_id "
                    + "and to_date(bl.reserved_till) < to_date(sysdate))");
            
            String roomy2 = "{call roomy2()}";
            callableStatement = conn.prepareCall(roomy2);  
            callableStatement.executeUpdate();
            
            
            
            id = jTextField1.getText();
                  modeldetail.addElement("id: " + id);
            rs = stmt.executeQuery("SELECT * FROM PATRON WHERE user_id='"+id+"'");
            int count = 0;
            while(rs.next())
                count++;
            if (count !=0)
                    {
                        rs = stmt.executeQuery("SELECT * FROM PATRON WHERE user_id='"+id+"'");
                        rs.next();
                        patron_id = rs.getString("patron_id");
                        System.out.println(rs.getString("name"));
                            if(jPasswordField1.getText().equals(rs.getString("passwd")))
                            {
                            JOptionPane.showMessageDialog(lf, "Valid Login");
                            ok = 1;
                            }
                            else
                            {
                              JOptionPane.showMessageDialog(lf, "Invalid Password");
                              ok = 0;
                            }
                    }
            else
            {
               JOptionPane.showMessageDialog(lf, "Invalid username");
                ok = 0;
            }
      //      }
                 
      
      //String name1 = rs.getString("name");
      //modeldetail.addElement("Name: " + name1);
     if (ok == 1)
    {
      String p_out = "no";
        
      String acct_deactivateproc = "{call Account_deactivate(?,?)}";
      callableStatement = conn.prepareCall(acct_deactivateproc);
      callableStatement.setString(1,patron_id);
      callableStatement.registerOutParameter(2,java.sql.Types.VARCHAR);
      callableStatement.executeUpdate();
      p_out = callableStatement.getString(2);
      System.out.println("out para: " + p_out);
      
      if ( p_out.equals("deactivate"))
      {
          //call clear dues 
          JOptionPane.showMessageDialog(lf, "Acct deactivated, Please clear dues first or return the resource");
          LFForm lff1 = new LFForm(patron_id);
          lff1.setVisible(true);
      }
        else
      {
        
        String notify_books = "{call notify_books()}";
        callableStatement = conn.prepareCall(notify_books);  
        callableStatement.executeUpdate();
        
        String roomy = "{call roomy()}";
        callableStatement = conn.prepareCall(roomy);  
        callableStatement.executeUpdate();
        
        if (jCheckBox1.isSelected())
        {
          String notify_camera2 = "{call notify_camera2()}";
          callableStatement = conn.prepareCall(notify_camera2);  
          callableStatement.executeUpdate();
          
          String notify_camera3 = "{call notify_camera3()}";
          callableStatement = conn.prepareCall(notify_camera3);  
          callableStatement.executeUpdate();
        }
        else
        {
            String notify_cam = "{call notify_camera()}";
            callableStatement = conn.prepareCall(notify_cam);  
            callableStatement.executeUpdate();
        }
        
        rs = stmt.executeQuery("SELECT * FROM notifications WHERE patron_id='"+patron_id+"'");
        while(rs.next())
        {
           JOptionPane.showMessageDialog(lf, rs.getString("message"));
           int i = stmt1.executeUpdate("Delete from notifications WHERE patron_id='"+patron_id+ 
                   "' and message = '" + rs.getString("message") + "'" );
        }
        LoginOptionsPage slp = new LoginOptionsPage(patron_id);
        slp.setVisible(true);
      }
                }
        }   
           
        
        catch(Throwable oops) {
            oops.printStackTrace();
        }
        
                    
        finally {
                close(rs);
                //close(stmt);
                //close(conn);
            }
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2MouseClicked

       static void close(Connection conn) {
        if(conn != null) {
            try { conn.close(); }
            catch(Throwable oops) 
            {
                oops.printStackTrace();
            }
        }
    }

    static void close(Statement st) {
        if(st != null) {
            try { st.close(); } catch(Throwable oops) {oops.printStackTrace();}
        }
    }

    static void close(ResultSet rs) {
        if(rs != null) {
            try { rs.close(); } catch(Throwable oops) {oops.printStackTrace();}
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
