/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library_mgmt_ncstate;

import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.DefaultListModel;
import java.util.*;

/**
 *
 * @author Mukka
 */
public class BBForm extends javax.swing.JFrame {

    /**
     * Creates new form BBForm
     */
    
    static final String jdbcURL = "jdbc:oracle:thin:@ora.csc.ncsu.edu:1521:orcl";
    static Connection conn = null;
    static Statement stmt = null;
    //static ResultSet rs = null;
    static String patronid;
    
    public BBForm(String id) {
        patronid = id;
        initComponents();
        initialize();
        load_bb_list();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Block Book");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("Book till");

        jButton2.setText("Refresh");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Close");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {
        ResultSet rs = null;
        try
        {
            String query = "BEGIN TESTPROC END";
            rs = stmt.executeQuery(query);
            System.out.println("####### "+rs.getString(1));
        }
        catch(Throwable oops){
                        oops.printStackTrace();
                        }
        finally {
                close(rs);
                //close(stmt);
                //close(conn);
            }
    }*/
    
    public void query_commit()
    {
        try
        {
            Statement cstmt = conn.createStatement();
            cstmt.executeUpdate("COMMIT");
        }
        catch(Throwable oops){
                        oops.printStackTrace();
                }        
    }
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        String selected = (String)jList1.getSelectedValue();
        //String s_date = jXDatePicker1.getDate().toString();
        Calendar c = Calendar.getInstance();
        Calendar c4 = Calendar.getInstance();
        Calendar today = Calendar.getInstance();
        String formatedDate;
        
        ResultSet rs = null;
        ResultSet rs2 = null;
        ResultSet rs3 = null;
        ResultSet rs4 = null;
        
        try
        {
        Statement stmt2 = conn.createStatement();
        Statement stmt3 = conn.createStatement();
        Statement stmt4 = conn.createStatement();
        Statement stmt5 = conn.createStatement();
        Statement stmt6 = conn.createStatement();
        
        DateFormat formatter = new SimpleDateFormat("E MMM dd HH:mm:ss Z yyyy");
        java.util.Date date = (java.util.Date)formatter.parse(jXDatePicker1.getDate().toString());
        c.setTime(date);
        //formatedDate = c.get(Calendar.DATE) + "/" + (c.get(Calendar.MONTH) + 1) + "/" +c.get(Calendar.YEAR);
        formatedDate = c.get(Calendar.YEAR) + "/" + (c.get(Calendar.MONTH)+1) + "/" + c.get(Calendar.DATE);
        //jTextField1.setText(formatedDate);
        
        DateFormat format = new SimpleDateFormat("yyyy/MM/dd");
        java.util.Date booked_till = format.parse(formatedDate);
        //jTextField1.setText(booked_till.toString());
        
        //c4.setTime(date);
        c4.add(Calendar.MONTH, 4);
        c4.add(Calendar.DATE, 1);
        String formatedDate4 = c4.get(Calendar.YEAR) + "/" + (c4.get(Calendar.MONTH)+1) + "/" + c4.get(Calendar.DATE);
        java.util.Date four_months = format.parse(formatedDate4);
        //jTextField1.setText(four_months.toString());
        
        today.add(Calendar.DATE, -1);
        String formatedDatet = today.get(Calendar.YEAR) + "/" + (today.get(Calendar.MONTH)+1) + "/" + today.get(Calendar.DATE);
        java.util.Date today_d = format.parse(formatedDatet);
        
        if(booked_till.before(four_months) && booked_till.after(today_d))
        {
            //jTextField1.setText("Correct");
            String arr[] = selected.split(" - ");
            String isbn = arr[0].trim();
            
            //Get count of books reserved
            int resv_count = 0;
            String count_query = "SELECT COUNT(*) FROM BookList WHERE Isbn = '"+isbn+"'";
            rs2 = stmt2.executeQuery(count_query);
            while(rs2.next())
                resv_count = rs2.getInt(1);
            
            //Get course id and dept id from Teaches table
            int c_id = 0;
            int d_id = 0;
            String cd_query = "SELECT Course_id, Dept_id FROM Teaches WHERE Faculty_num = '"+patronid+"'";
            rs3 = stmt3.executeQuery(cd_query);
            while(rs3.next())
            {
                c_id = rs3.getInt(1);
                d_id = rs3.getInt(2);
            }
            
            //Make entry into BlockBook
            String query = "INSERT INTO BlockBook VALUES (Blocking_seq.nextval, '"+patronid+"', "+c_id+", "+d_id+", '"+isbn+"', "+resv_count+", TO_DATE('"+formatedDate+"','YYYY/MM/DD'))";
            //System.out.println("### -> "+query);
            stmt4.executeUpdate(query);
            
            query_commit();
            
            //Getting Blocking ID to add in BookList table
            int b_id = 0;
            String get_bid = "SELECT Blocking_id FROM BlockBook WHERE Faculty_num = '"+patronid+"' AND Course_id = "+c_id+" AND Dept_id = "+d_id+" AND Isbn = '"+isbn+"'";
            //System.out.println("### -> "+get_bid);
            rs4 = stmt5.executeQuery(get_bid);
            while(rs4.next())
                b_id = rs4.getInt(1);
            
            //Update Booklist table to include these values
            String update_query = "UPDATE BookList SET Blocking_id = "+b_id+", IsBlocked = 1 WHERE Isbn = '"+isbn+"'";
            //System.out.println("### -> "+update_query);
            stmt6.executeUpdate(update_query);
            query_commit();
            
            jTextField1.setText("Book has been reserved.");
        }
        else
            jTextField1.setText("Choose a date within the next 4 months.");
        
        
            
        
        /*
        if(selected.isEmpty() || selected==null)
            jTextField1.setText("Please select a book to reserve.");
        else
        {
            String arr[] = selected.split(" - ");
            String isbn = arr[0].trim();
            ResultSet rs = null;
            try
            {
                String query = "";
            }
            catch(Throwable oops){
                        oops.printStackTrace();
                        }
            finally {
                close(rs);
                //close(stmt);
                //close(conn);
            }
        }
        */
        
        }
        catch(Throwable oops){
                        oops.printStackTrace();
                }
        finally {
                close(rs);
                //close(stmt);
                //close(conn);
            }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        jTextField1.setText("");
        load_bb_list();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3MouseClicked
    
    public void load_bb_list()
    {
        DefaultListModel modelbb = new DefaultListModel();
        ResultSet rs = null;
        try
        {
            //String query = "SELECT Isbn, Title FROM Book WHERE Isbn NOT IN (SELECT DISTINCT Isbn FROM BookList WHERE IsBlocked=1) ORDER BY Isbn";
            String query = "SELECT B.Isbn, B.Title FROM Book B, Teaches T, Course C WHERE T.Faculty_num = '"+patronid+"' AND T.course_id = C.course_id AND C.book_isbn = B.isbn AND B.isbn NOT IN (SELECT DISTINCT Isbn FROM BookList WHERE IsBlocked=1) ORDER BY B.Isbn";
            //System.out.println("1 -> "+query);
            rs = stmt.executeQuery(query);
            int count = 0;
            while(rs.next())
            {
                count++;
                String isbn = rs.getString(1);
                String title = rs.getString(2);
                String display = isbn + " - " + title;
                modelbb.addElement(display);
            }
            
            if(count==0)
            {
                jTextField1.setText("No books available to reserve.");
                modelbb.clear();
                jList1.setModel(modelbb);
            }
            else
                jList1.setModel(modelbb);
        }
        catch(Throwable oops){
                        oops.printStackTrace();
                        }
        finally {
                close(rs);
                //close(stmt);
                //close(conn);
            }
    }
    
    public void initialize()
    {
        try {
            // Load the driver. This creates an instance of the driver
	    // and calls the registerDriver method to make Oracle Thin
	    // driver available to clients.
            Class.forName("oracle.jdbc.driver.OracleDriver");
           
	    String user = "msaikia"; 	// For example, "jsmith"
	    //String user = "ibobra";
            //String passwd = "200109140";	// Your 9 digit student ID number
	    String passwd = "200109120";
                 // Get a connection from the first driver in the
		// DriverManager list that recognizes the URL jdbcURL
            conn = DriverManager.getConnection(jdbcURL, user, passwd);
		// Create a statement object that will be sending your
		// SQL statements to the DBMS
            stmt = conn.createStatement();
            
            //ResultSet rs = null;
                
        }
       
     catch(Throwable oops) {
            oops.printStackTrace();
        }
         finally {
                //close(rs);
                //close(stmt);
                //close(conn);
            }
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BBForm(patronid).setVisible(true);
            }
        });
    }
    
    static void close(Connection conn) {
        if(conn != null) {
            try { conn.close(); }
            catch(Throwable oops) 
            {
                oops.printStackTrace();
            }
        }
    }

    static void close(Statement st) {
        if(st != null) {
            try { st.close(); } catch(Throwable oops) {oops.printStackTrace();}
        }
    }

    static void close(ResultSet rs) {
        if(rs != null) {
            try { rs.close(); } catch(Throwable oops) {oops.printStackTrace();}
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    // End of variables declaration//GEN-END:variables
}
